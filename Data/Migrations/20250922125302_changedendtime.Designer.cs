// <auto-generated />
using System;
using Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250922125302_changedendtime")]
    partial class changedendtime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.TrainingClassEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ReservedSeats")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TrainingClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            Description = "Ett lugnt yogapass för alla nivåer.",
                            EndTime = new DateTime(2025, 9, 20, 18, 30, 0, 0, DateTimeKind.Utc),
                            Instructor = "Anna Svensson",
                            Location = "Sal A",
                            ReservedSeats = 0,
                            RowVersion = new byte[0],
                            StartTime = new DateTime(2025, 9, 20, 17, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Yoga Bas"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 18,
                            Description = "Intensivt spinningpass med hög energi.",
                            EndTime = new DateTime(2025, 9, 20, 18, 45, 0, 0, DateTimeKind.Utc),
                            Instructor = "Johan Karlsson",
                            Location = "Spinningsalen",
                            ReservedSeats = 0,
                            RowVersion = new byte[0],
                            StartTime = new DateTime(2025, 9, 20, 18, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Spinning 45"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
